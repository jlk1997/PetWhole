"use strict";var e=(e,o,n)=>new Promise(((r,t)=>{var s=e=>{try{l(n.next(e))}catch(o){t(o)}},i=e=>{try{l(n.throw(e))}catch(o){t(o)}},l=e=>e.done?r(e.value):Promise.resolve(e.value).then(s,i);l((n=n.apply(e,o)).next())}));const o=require("../common/vendor.js"),n="/api/pet-recognition",r=.3,t=e=>new Promise(((n,r)=>{if(e.startsWith("blob:"))try{fetch(e).then((e=>e.blob())).then((e=>{const o=new FileReader;o.onloadend=()=>{const e=o.result.split(",")[1];n(e)},o.readAsDataURL(e)})).catch((e=>r(new Error(`Blob URL处理失败: ${e.message||e}`))))}catch(t){r(new Error(`Blob处理失败: ${t.message||t}`))}else if(void 0!==o.index&&"function"==typeof o.index.getFileSystemManager)try{o.index.getFileSystemManager().readFile({filePath:e,encoding:"base64",success:e=>{n(e.data)},fail:e=>{r(new Error(`读取文件失败: ${e.errMsg||JSON.stringify(e)}`))}})}catch(t){r(new Error(`文件操作错误: ${t.message||t}`))}else try{const o=new XMLHttpRequest;o.open("GET",e,!0),o.responseType="blob",o.onload=function(){if(200===this.status){const e=new FileReader;e.onloadend=function(){const o=e.result.split(",")[1];n(o)},e.readAsDataURL(this.response)}else r(new Error(`加载图片失败，状态码: ${this.status}`))},o.onerror=function(){r(new Error("网络请求图片失败"))},o.send()}catch(t){r(new Error(`H5环境处理图片失败: ${t.message||t}`))}}));function s(o){return e(this,null,(function*(){var r;try{console.log("正在调用后端API进行图像识别...");const t=o.startsWith("data:image")?o:`data:image/jpeg;base64,${o}`;let s=yield function(o){return e(this,null,(function*(){return new Promise(((e,n)=>{try{const n=new Image;n.onload=function(){try{const r=document.createElement("canvas"),t=800;let s=n.width,i=n.height;s>i&&s>t?(i=Math.round(i*(t/s)),s=t):i>t&&(s=Math.round(s*(t/i)),i=t),r.width=s,r.height=i;r.getContext("2d").drawImage(n,0,0,s,i);const l=r.toDataURL("image/jpeg",.7),a=o.length,c=l.length;console.log(`图像优化: 原始大小 ${Math.round(a/1024)}KB, 压缩后 ${Math.round(c/1024)}KB, 压缩率 ${Math.round(100*(1-c/a))}%`),e(l)}catch(r){console.error("压缩图像失败:",r),e(o)}},n.onerror=function(){console.error("加载图像到Image对象失败"),e(o)},n.src=o}catch(r){console.error("图像优化过程出错:",r),e(o)}}))}))}(t);const i=yield fetch(n,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({imageData:s})});if(!i.ok){const e=yield i.json().catch((()=>({})));if(503===i.status&&(null==(r=e.error)?void 0:r.includes("加载中")))throw new Error("AI模型正在加载中，请稍后再试");throw new Error(`后端API返回错误: ${i.status} ${i.statusText} - ${e.error||""}`)}const l=yield i.json();if(console.log("API原始返回数据:",JSON.stringify(l).substring(0,200)),Array.isArray(l))return console.log("API返回了有效的预测结果数组:",l.length),l;if(l&&"object"==typeof l){if(console.log("API返回了非数组格式的结果:",l),l.hasOwnProperty("label")&&l.hasOwnProperty("score"))return[l];if(l.hasOwnProperty("labels")&&l.hasOwnProperty("scores")){const{labels:e,scores:o}=l;return e.map(((e,n)=>({label:e,score:o[n]})))}}throw console.warn("API返回的数据格式不符合预期:",l),new Error("API返回的数据格式不符合预期")}catch(t){throw console.error("后端API调用失败:",t),t}}))}const i=(e,o)=>{if(console.log("直接使用API返回的品种数据，不使用本地品种库"),!e||0===e.length)return console.log("没有接收到有效的预测结果"),null;const n=[...e].sort(((e,o)=>{const n=parseFloat(e.score||e.confidence||0);return parseFloat(o.score||o.confidence||0)-n}));console.log("排序后的预测结果:",n);const t=n.filter((e=>"dog"!==e.label&&"cat"!==e.label&&"canine"!==e.label&&"pet"!==e.label&&parseFloat(e.score||e.confidence||0)>r));if(0===t.length)return console.log("没有有效的品种预测结果"),null;const s=t[0];console.log("使用最高置信度的品种:",s.label,"置信度:",s.score);let i="",l="";s.additional_info&&(i=s.additional_info.description||"",l=s.additional_info.baike_url||"",console.log("包含百科信息",l?"有链接":"无链接"));let a=i;a?a.length>100&&(a=a.substring(0,100)+"..."):a=`${s.label}的外观特征`;let c="";c=i&&i.length>150?i.substring(100,250)+"...":"具体护理方法请参考专业养宠指南";let g="";if(i&&i.includes("英文名")){const e=i.match(/英文名[：:]\s*([^，。,]+)/);e&&e[1]&&(g=e[1].trim())}const d={name:s.label,englishName:g||s.label,characteristics:{friendliness:i.includes("友好")||i.includes("友善")?85:75,activity:i.includes("活泼")||i.includes("运动")?80:70,trainability:i.includes("聪明")||i.includes("智能")?85:75,grooming:i.includes("毛发")||i.includes("护理")?80:60},features:a,careNote:c,baikeUrl:l,originalScore:parseFloat(s.score||s.confidence||0),apiData:s};return console.log("创建动态品种:",d.name),{breed:d,confidence:parseFloat(s.score||s.confidence||0),matchScore:parseFloat(s.score||s.confidence||0),source:"百度AI识别",isDynamicBreed:!0,originalLabel:s.label,apiData:s}};exports.analyzePetImages=o=>e(exports,null,(function*(){if(!o||0===o.length)throw new Error("需要提供至少一张图片");try{console.log("开始分析宠物图片:",o);const n=[];for(const l of o)try{console.log(`处理图片: ${l}`);const e=yield t(l);console.log(`图片转换为Base64完成，长度: ${e.length}`),console.log("准备调用API识别...");const o=yield s(e);if(console.log("API识别完成，原始响应:",JSON.stringify(o).substring(0,200)),Array.isArray(o)&&o.length>0){console.log(`收到${o.length}个预测结果`);const e=i(o);e?(console.log("成功创建品种信息:",e.breed.name),n.push({imagePath:l,petType:"dog",breed:e.breed,confidence:e.confidence,source:e.source,originalResponse:o})):(console.log("无法从API结果创建品种信息"),n.push({imagePath:l,identified:!1,message:"无法识别宠物品种，请提供更清晰的照片",originalResponse:o}))}else console.warn("API未返回有效结果结构:",o),n.push({imagePath:l,identified:!1,message:"分析结果不明确，请提供更清晰的照片",apiError:"object"==typeof o?JSON.stringify(o):String(o)})}catch(e){console.error(`分析图片 ${l} 失败:`,e),n.push({imagePath:l,identified:!1,message:`图片处理失败: ${e.message}`,error:e.message})}console.log("所有分析结果:",JSON.stringify(n,null,2));const r=n.filter((e=>e.breed));if(console.log(`有${r.length}个有效识别结果`),r.length>0){const e=r.reduce(((e,o)=>parseFloat(o.confidence)>parseFloat(e.confidence)?o:e),r[0]);console.log("选择置信度最高的结果:",e.breed.name);const{breed:o}=e,n={identified:!0,breed:o.name,breedConfidence:Math.round(100*parseFloat(e.confidence)),features:o.features||"暂无特征描述",characteristics:o.characteristics||{friendliness:75,activity:70,trainability:70,grooming:60},note:o.careNote||"暂无护理建议",recognitionSource:e.source||"API识别",petType:e.petType||"dog"};return o.englishName&&(n.englishName=o.englishName),o.baikeUrl&&(n.baikeUrl=o.baikeUrl),n.purity=parseFloat(e.confidence)>.75?"纯种":"混合",n._debug={originalResponse:e.originalResponse},console.log("返回最终结果:",JSON.stringify(n,null,2)),n}{const e={identified:!1,message:"无法识别宠物品种，请提供更清晰的照片"};return n.length>0&&n[0].originalResponse&&(e._debug={originalResponse:n[0].originalResponse}),console.log("返回错误结果:",JSON.stringify(e,null,2)),e}}catch(n){throw console.error("分析宠物图片失败:",n),new Error(`图像分析失败: ${n.message}`)}}));
