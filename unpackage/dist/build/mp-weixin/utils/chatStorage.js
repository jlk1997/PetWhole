"use strict";const e=require("../common/vendor.js"),s="chat_nearby_messages",t="chat_city_messages",r=6048e5;function n(){try{const s=e.index.getStorageSync("chat_pending_messages");if(s){return JSON.parse(s).messages||[]}}catch(s){console.error("读取待处理消息失败:",s)}return[]}const o={getNearbyMessagesCache:function(t=""){const n=t?`${s}_${t}`:s;try{const s=e.index.getStorageSync(n);if(s){const t=JSON.parse(s);return t.timestamp&&Date.now()-t.timestamp>r?(console.log("附近消息缓存已过期，清除缓存"),e.index.removeStorageSync(n),[]):t.messages||[]}}catch(o){console.error("读取附近消息缓存失败:",o)}return[]},saveNearbyMessagesCache:function(t,r=""){if(!Array.isArray(t))return void console.error("保存的消息必须是数组");const n=r?`${s}_${r}`:s;try{const s={messages:t.slice(-100),timestamp:Date.now()};e.index.setStorageSync(n,JSON.stringify(s))}catch(o){console.error("保存附近消息缓存失败:",o)}},getCityMessagesCache:function(s){if(!s)return console.error("获取城市消息缓存需要城市名称"),[];const n=`${t}_${s}`;try{const t=e.index.getStorageSync(n);if(t){const o=JSON.parse(t);return o.timestamp&&Date.now()-o.timestamp>r?(console.log(`城市【${s}】消息缓存已过期，清除缓存`),e.index.removeStorageSync(n),[]):o.messages||[]}}catch(o){console.error(`读取城市【${s}】消息缓存失败:`,o)}return[]},saveCityMessagesCache:function(s,r){if(!Array.isArray(s))return void console.error("保存的消息必须是数组");if(!r)return void console.error("保存城市消息缓存需要城市名称");const n=`${t}_${r}`;try{const t={messages:s.slice(-100),timestamp:Date.now()};e.index.setStorageSync(n,JSON.stringify(t))}catch(o){console.error(`保存城市【${r}】消息缓存失败:`,o)}},clearExpiredMessageCaches:function(){try{const n=e.index.getStorageInfoSync().keys;n.filter((e=>e.startsWith(s)||e.startsWith(t))).forEach((s=>{try{const t=e.index.getStorageSync(s);if(t){const n=JSON.parse(t);n.timestamp&&Date.now()-n.timestamp>r&&(console.log(`缓存【${s}】已过期，清除缓存`),e.index.removeStorageSync(s))}}catch(t){console.warn(`缓存【${s}】数据无效，清除缓存`),e.index.removeStorageSync(s)}})),console.log("清理过期缓存完成")}catch(n){console.error("清理过期缓存失败:",n)}},savePendingMessage:function(s){if(s&&s.id)try{const t=n(),r=t.findIndex((e=>e.id===s.id));-1!==r?t[r]=s:t.push(s),e.index.setStorageSync("chat_pending_messages",JSON.stringify({messages:t,timestamp:Date.now()}))}catch(t){console.error("保存待处理消息失败:",t)}else console.error("保存的消息对象无效")},getPendingMessages:n,removePendingMessage:function(s){if(s)try{const t=n().filter((e=>e.id!==s));e.index.setStorageSync("chat_pending_messages",JSON.stringify({messages:t,timestamp:Date.now()}))}catch(t){console.error("移除待处理消息失败:",t)}},getPrivateMessages:function(s){if(!s)return console.error("获取私聊消息缓存需要缓存键"),[];try{const t=e.index.getStorageSync(s);if(t){const n=JSON.parse(t);return n.timestamp&&Date.now()-n.timestamp>r?(console.log(`私聊消息缓存【${s}】已过期，清除缓存`),e.index.removeStorageSync(s),[]):n.messages||[]}}catch(t){console.error(`读取私聊消息缓存【${s}】失败:`,t)}return[]},savePrivateMessages:function(s,t){if(Array.isArray(s))if(t)try{const r={messages:s.slice(-100),timestamp:Date.now()};e.index.setStorageSync(t,JSON.stringify(r))}catch(r){console.error(`保存私聊消息缓存【${t}】失败:`,r)}else console.error("保存私聊消息缓存需要缓存键");else console.error("保存的消息必须是数组")}};exports.chatStorage=o;
