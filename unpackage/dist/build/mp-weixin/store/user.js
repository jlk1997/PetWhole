"use strict";var e=Object.defineProperty,r=Object.defineProperties,t=Object.getOwnPropertyDescriptors,n=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,i=(r,t,n)=>t in r?e(r,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):r[t]=n,l=(e,r)=>{for(var t in r||(r={}))o.call(r,t)&&i(e,t,r[t]);if(n)for(var t of n(r))s.call(r,t)&&i(e,t,r[t]);return e},u=(e,r,t)=>new Promise(((n,o)=>{var s=e=>{try{l(t.next(e))}catch(r){o(r)}},i=e=>{try{l(t.throw(e))}catch(r){o(r)}},l=e=>e.done?n(e.value):Promise.resolve(e.value).then(s,i);l((t=t.apply(e,r)).next())}));const a=require("../common/vendor.js"),c=require("./pet.js"),h=require("../utils/api.js"),d=a.defineStore("user",{state:()=>({user:null,token:a.index.getStorageSync("token")||null,loading:!1,error:null,stats:null}),getters:{isAuthenticated:e=>!!e.token&&!!e.user,userAvatar:e=>e.user?e.user.avatar||"/static/images/default-avatar.png":"",userId:e=>{var r,t;return(null==(r=e.user)?void 0:r._id)||(null==(t=e.user)?void 0:t.id)||""},nickname:e=>{var r,t;return(null==(r=e.user)?void 0:r.nickname)||(null==(t=e.user)?void 0:t.username)||"游客"}},actions:{login(e,r){return u(this,null,(function*(){try{this.loading=!0,this.error=null;const t=yield h.api.user.login(e,r);if(console.log("登录响应:",t),t&&t.token){if(a.index.setStorageSync("token",t.token),t.user){const e=l({},t.user);e.gender||(console.warn("登录响应中用户信息没有gender字段，设置为默认值unknown"),e.gender="unknown"),this.user=e,a.index.setStorageSync("userInfo",JSON.stringify(e)),console.log("登录成功，用户信息已保存:",{user:this.user,gender:this.user.gender})}else console.log("登录响应中无用户信息，获取用户信息"),yield this.fetchUserInfo();return!0}return this.error="登录失败，请检查用户名和密码",!1}catch(t){return console.error("登录失败:",t),this.error="登录失败，请检查网络连接",!1}finally{this.loading=!1}}))},register(e){return u(this,null,(function*(){try{this.loading=!0,this.error=null;return yield h.api.auth.register(e)}catch(r){throw console.error("注册失败:",r),this.error=r.message||"注册失败，请稍后再试",r}finally{this.loading=!1}}))},fetchUserInfo(){return u(this,null,(function*(){try{console.log("开始获取用户信息"),this.loading=!0,this.error=null;let r=null;try{const e=a.index.getStorageSync("userInfo");e&&(r=JSON.parse(e),console.log("已获取本地存储的用户信息用于备份:",r))}catch(e){console.warn("读取本地用户信息失败:",e)}const t=yield h.api.user.getCurrentUser();if(console.log("从API获取到的用户信息:",t),t){const e=l({},t);return!e.gender&&r&&r.gender?(console.warn("API响应中缺少gender字段，使用本地存储的值:",r.gender),e.gender=r.gender):e.gender||(console.warn("没有找到gender字段，设置为默认值unknown"),e.gender="unknown"),this.user=e,a.index.setStorageSync("userInfo",JSON.stringify(e)),console.log("最终更新后的用户信息，确认性别字段存在:",{user:this.user,gender:this.user.gender}),e}if(r)return console.warn("API返回为空，使用本地用户信息:",r),this.user=r,r;throw new Error("获取用户信息失败，返回为空")}catch(r){return console.error("获取用户信息失败:",r),this.error="获取用户信息失败",null}finally{this.loading=!1}}))},updateUserInfo(e){return u(this,null,(function*(){try{this.loading=!0,this.error=null;const i=(n=l({},e),o={phone:void 0!==e.phone?e.phone:"",gender:e.gender||"unknown"},r(n,t(o)));console.log("发送到服务器的完整用户数据，特别关注性别字段:",i);let u=null;try{console.log("使用特殊API更新用户前的数据检查:",{gender:i.gender,phone:i.phone}),u=yield h.api.user.updateFullProfile(i),console.log("使用特殊API更新用户成功:",u),u&&!u.gender&&i.gender&&(console.warn("响应中缺少gender字段，手动添加"),u.gender=i.gender)}catch(s){console.warn("特殊API调用失败，使用标准API:",s),u=yield h.api.user.updateProfile(i),console.log("使用标准API更新用户成功:",u),u&&!u.gender&&i.gender&&(console.warn("响应中缺少gender字段，手动添加"),u.gender=i.gender)}if(u){const e=l({},this.user);return Object.keys(u).forEach((r=>{e[r]=u[r]})),!e.gender&&i.gender&&(e.gender=i.gender),!e.phone&&i.phone&&(e.phone=i.phone),this.user=e,a.index.setStorageSync("userInfo",JSON.stringify(e)),console.log("最终更新后的用户数据，确认性别字段存在:",{user:this.user,gender:this.user.gender}),e}return u}catch(i){return console.error("更新用户信息失败:",i),this.error="更新用户信息失败",null}finally{this.loading=!1}var n,o}))},uploadAvatar(e){return u(this,null,(function*(){try{this.loading=!0,this.error=null,console.log("开始上传头像:",e);const r=yield h.api.user.uploadAvatar(e);return console.log("头像上传响应:",r),r&&r.data&&r.data.avatar?this.user&&(this.user.avatar=r.data.avatar,a.index.setStorageSync("userInfo",JSON.stringify(this.user)),console.log("用户头像已更新:",this.user.avatar)):r&&r.avatar&&this.user&&(this.user.avatar=r.avatar,a.index.setStorageSync("userInfo",JSON.stringify(this.user)),console.log("用户头像已更新(直接返回):",this.user.avatar)),r.data||r}catch(r){return console.error("上传头像失败:",r),this.error="上传头像失败",null}finally{this.loading=!1}}))},fetchUserStats(e){return u(this,null,(function*(){try{this.loading=!0,this.error=null;if(!(e||(this.user?this.user._id:null)))return null;const r=e?yield h.api.user.getUserStats(e):yield h.api.user.getUserStats();return(!e||this.user&&this.user._id===e)&&(this.stats=r),r}catch(r){return console.error("获取用户统计信息失败:",r),this.error="获取用户统计信息失败",null}finally{this.loading=!1}}))},followUser(e){return u(this,null,(function*(){try{this.loading=!0,this.error=null;const r=yield h.api.user.followUser(e);return this.stats&&(this.stats.followingCount+=1),r}catch(r){throw console.error("关注用户失败:",r),this.error="关注用户失败",r}finally{this.loading=!1}}))},unfollowUser(e){return u(this,null,(function*(){try{this.loading=!0,this.error=null;const r=yield h.api.user.unfollowUser(e);return this.stats&&this.stats.followingCount>0&&(this.stats.followingCount-=1),r}catch(r){throw console.error("取消关注用户失败:",r),this.error="取消关注用户失败",r}finally{this.loading=!1}}))},changePassword(e){return u(this,null,(function*(){try{this.loading=!0,this.error=null;return yield h.api.user.changePassword(e)}catch(r){throw console.error("修改密码失败:",r),this.error="修改密码失败",r}finally{this.loading=!1}}))},logout(){return u(this,null,(function*(){try{return this.loading=!0,!0}catch(e){throw console.error("退出登录失败:",e),e}finally{this.user=null,this.token=null,this.stats=null,this.error=null,a.index.removeStorageSync("token"),a.index.removeStorageSync("userInfo");c.usePetStore().clearPets(),this.loading=!1}}))},init(){return u(this,null,(function*(){try{if(this.token){const t=a.index.getStorageSync("userInfo");if(t)try{const e=JSON.parse(t);e&&e._id&&(this.user=e,console.log("已从本地存储加载用户信息:",this.user))}catch(e){console.error("解析存储的用户信息失败:",e)}yield this.fetchUserInfo();if(this.user){try{yield this.fetchUserStats()}catch(r){console.warn("获取用户统计数据失败，继续初始化流程:",r)}try{const e=c.usePetStore();yield e.fetchPets()}catch(r){console.warn("获取宠物列表失败，继续初始化流程:",r)}}}}catch(r){console.error("用户初始化失败:",r),this.token=null,a.index.removeStorageSync("token")}}))},updateLocation(e){return u(this,null,(function*(){try{return this.currentLocation=e,this.token&&(yield h.api.location.updateLocation({latitude:e.latitude,longitude:e.longitude,timestamp:(new Date).toISOString()})),e}catch(r){return console.error("更新位置失败:",r),null}}))}}});exports.useUserStore=d;
