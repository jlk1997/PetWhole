"use strict";var t=(t,e,r)=>new Promise(((s,o)=>{var i=t=>{try{l(r.next(t))}catch(e){o(e)}},n=t=>{try{l(r.throw(t))}catch(e){o(e)}},l=t=>t.done?s(t.value):Promise.resolve(t.value).then(i,n);l((r=r.apply(t,e)).next())}));const e=require("../common/vendor.js"),r=require("./user.js"),s=require("../utils/api.js"),o=e.defineStore("pet",{state:()=>({pets:[],currentPet:null,loading:!1,error:null}),getters:{hasPets:t=>t.pets.length>0},actions:{restorePetState(){try{const t=e.index.getStorageSync("pets"),r=e.index.getStorageSync("currentPet");t&&(this.pets=JSON.parse(t)),r&&(this.currentPet=JSON.parse(r))}catch(t){console.error("恢复宠物状态失败:",t)}},savePetState(){try{e.index.setStorageSync("pets",JSON.stringify(this.pets)),this.currentPet&&e.index.setStorageSync("currentPet",JSON.stringify(this.currentPet))}catch(t){console.error("保存宠物状态失败:",t)}},fetchPets(){return t(this,null,(function*(){try{this.loading=!0,this.error=null;if(!r.useUserStore().isAuthenticated)return this.pets=[],[];const t=yield s.api.pet.getMyPets();return this.pets=t&&Array.isArray(t)?t:[],this.pets.length>0&&!this.currentPet&&(this.currentPet=this.pets[0]),this.savePetState(),this.pets}catch(t){return console.error("获取宠物列表失败:",t),this.error="获取宠物列表失败",this.pets&&this.pets.length||(this.restorePetState(),this.pets||(this.pets=[])),this.pets||[]}finally{this.loading=!1}}))},getPetById(e){return t(this,null,(function*(){const t=this.pets.find((t=>t.id===e||t._id===e));if(t)return t.dailyPhotos&&Array.isArray(t.dailyPhotos)&&console.log("从本地获取宠物信息，处理照片URL"),t;try{this.loading=!0,this.error=null;const t=yield s.api.pet.getPetById(e);return t?(t.dailyPhotos&&Array.isArray(t.dailyPhotos)&&console.log("从API获取宠物信息，处理照片URL:",t.dailyPhotos.length),t):null}catch(r){return console.error("获取宠物详情失败:",r),this.error="获取宠物详情失败",null}finally{this.loading=!1}}))},createPet(e){return t(this,null,(function*(){try{this.loading=!0,this.error=null;const t=yield s.api.pet.addPet(e);return yield this.fetchPets(),t}catch(t){throw console.error("创建宠物失败:",t),this.error="创建宠物失败",t}finally{this.loading=!1}}))},updatePet(e,r){return t(this,null,(function*(){try{this.loading=!0,this.error=null,console.log("更新宠物信息，ID:",e,"数据:",r);const t=yield s.api.pet.updatePet(e,r);console.log("更新宠物API响应:",t),yield this.fetchPets();const o=this.pets.find((t=>t._id===e||t.id===e));return this.currentPet&&(this.currentPet._id===e||this.currentPet.id===e)&&o&&(this.currentPet=o),this.savePetState(),o||t}catch(t){throw console.error("更新宠物信息失败:",t),this.error="更新宠物信息失败",t}finally{this.loading=!1}}))},deletePet(e){return t(this,null,(function*(){try{this.loading=!0,this.error=null,console.log("删除宠物，ID:",e);const t=yield s.api.pet.deletePet(e);return console.log("删除宠物API响应:",t),this.pets=this.pets.filter((t=>t._id!==e&&t.id!==e)),!this.currentPet||this.currentPet._id!==e&&this.currentPet.id!==e||(this.currentPet=this.pets.length>0?this.pets[0]:null),this.savePetState(),{success:!0}}catch(t){throw console.error("删除宠物失败:",t),this.error="删除宠物失败",t}finally{this.loading=!1}}))},uploadPetAvatar(e,r){return t(this,null,(function*(){try{this.loading=!0,this.error=null,console.log("开始上传宠物头像:",e,r);const t=yield s.api.pet.uploadPetAvatar(e,r);if(console.log("头像上传结果:",t),t){yield this.fetchPets();const t=this.pets.find((t=>t._id===e||t.id===e));t&&(console.log("头像更新后的宠物:",t),!this.currentPet||this.currentPet._id!==e&&this.currentPet.id!==e||(this.currentPet=t)),this.savePetState()}return t}catch(t){throw console.error("上传宠物头像失败:",t),this.error="上传宠物头像失败",t}finally{this.loading=!1}}))},setCurrentPet(t){this.currentPet=t,this.savePetState()},clearPets(){this.pets=[],this.currentPet=null,this.error=null;try{e.index.removeStorageSync("pets"),e.index.removeStorageSync("currentPet")}catch(t){console.error("清除宠物数据失败:",t)}},addPet(e){return t(this,null,(function*(){try{this.loading=!0,this.error=null,console.log("添加宠物，数据:",e);const t=yield s.api.pet.addPet(e);if(console.log("添加宠物API响应:",t),yield this.fetchPets(),!this.currentPet&&this.pets&&this.pets.length>0){const t=this.pets[this.pets.length-1];this.setCurrentPet(t)}return this.savePetState(),t}catch(t){throw console.error("添加宠物失败:",t),this.error="添加宠物失败",t}finally{this.loading=!1}}))},uploadPetDailyPhoto(r,s){return t(this,null,(function*(){this.loading=!0,this.error=null;try{console.log("上传宠物日常照片:",r,s);const t=`${e.index.getStorageSync("BASE_URL")||"http://49.235.65.37:5000"}/api/pets/${r}/daily-photo`,o=e.index.getStorageSync("token");return s.startsWith("blob:")?new Promise(((e,r)=>{try{console.log("处理blob URL:",s);const i=new Image;i.crossOrigin="anonymous",i.onload=()=>{try{const s=document.createElement("canvas");s.width=i.width,s.height=i.height;s.getContext("2d").drawImage(i,0,0);const n=s.toDataURL("image/jpeg",.9);console.log("转换完成，准备发送base64数据"),fetch(t,{method:"POST",headers:{Authorization:`Bearer ${o}`,"Content-Type":"application/json"},body:JSON.stringify({imageData:n,description:""})}).then((t=>{if(!t.ok)throw new Error(`上传失败: ${t.status}`);return t.json()})).then((t=>{console.log("上传成功:",t),e(t)})).catch((t=>{console.error("上传错误:",t),r(t)}))}catch(s){console.error("Canvas处理失败:",s),r(s)}},i.onerror=t=>{console.error("图片加载失败:",t),r(new Error("图片加载失败"))},i.src=s}catch(i){console.error("处理blob URL失败:",i),r(i)}})):new Promise(((r,i)=>{console.log("处理本地文件路径:",s),e.index.uploadFile({url:t,filePath:s,name:"photo",header:{Authorization:`Bearer ${o}`},success:t=>{let e;console.log("照片上传成功:",t);try{e="string"==typeof t.data?JSON.parse(t.data):t.data,r(e)}catch(s){console.error("解析上传响应失败:",s),i(s)}},fail:t=>{console.error("照片上传失败:",t),i(t)},complete:()=>{this.loading=!1}})}))}catch(t){throw console.error("上传宠物日常照片失败:",t),this.error=t.message||"上传宠物日常照片失败",t}finally{this.loading=!1}}))}}});exports.usePetStore=o;
